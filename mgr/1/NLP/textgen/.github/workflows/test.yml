name: Running tests

on:
  push:
    # trigger only on main branch
    branches:
      - main
    # trigger only on changes to the following files
    paths:
      - 'textgen/src/**'
      - 'textgen/tests/**'
      - 'environment.yml'
      - 'textgen/poetry.lock'
      - 'textgen/pyproject.toml'
      - '.github/workflows/test.yml'
  pull_request:
    # trigger only on main branch
    branches:
      - main
    # trigger only on changes to the following files
    paths:
      - 'textgen/src/**'
      - 'textgen/tests/**'
      - 'environment.yml'
      - 'textgen/poetry.lock'
      - 'textgen/pyproject.toml'
      - '.github/workflows/test.yml'

# env for all jobs
env:
  CONDA_CACHE_DIR: ~/conda_pkgs_dir
  POETRY_CACHE_DIR: ~/.cache/pypoetry
  PIP_CACHE_DIR: ~/.cache/pip
  # increase this value to manually reset cache
  CACHE_NUMBER: 0

jobs:
  test:
    name: Run tests
    strategy:
      # don't stop all tests if one fails
      fail-fast: false
      matrix:
        # better to use pinned versions here
        config:
          - { os: ubuntu-20.04, shell: bash -l }
          - { os: macos-10.15, shell: bash -l }
          - { os: windows-2019, shell: cmd /C CALL }
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        # necessary for conda to work
        shell: ${{ matrix.config.shell }} {0}
    steps:
      - # get repository code
        name: Checkout code
        uses: actions/checkout@v2
      - # get conda, poetry and pip cache (persistent between runs)
        name: Cache packages
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.CONDA_CACHE_DIR }}
            ${{ env.POETRY_CACHE_DIR }}
            ${{ env.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pkgs-${{ env.CACHE_NUMBER }} }}
      - # create and activate conda environment
        name: Set up environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: textgen
          environment-file: environment.yml
          # necessary for caching to work
          use-only-tar-bz2: true
      - # set up directories for poetry and pip cache (by default they are different on linux and windows)
        name: Set up poetry cache
        run: |
          poetry config cache-dir ${{ env.POETRY_CACHE_DIR }}
          pip config set global.cache-dir ${{ env.PIP_CACHE_DIR }}
      - # install only dependencies
        name: Install dependencies
        working-directory: textgen
        run: poetry install --no-root --extras test
      - # workaround for non-editable install, waiting for https://github.com/python-poetry/poetry/issues/1382
        name: Build package
        working-directory: textgen
        run: poetry build -f wheel
      - # use pip to install wheel produced in previous step
        name: Install package
        working-directory: textgen
        run: pip install --find-links=dist textgen[test]
      - name: Run tests
        run: pytest textgen